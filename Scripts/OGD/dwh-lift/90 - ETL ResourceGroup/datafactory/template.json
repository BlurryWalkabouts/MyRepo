{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyvaultName": {
      "type": "string",
      "metadata": {
        "description": "Azure Key Vault containing connection strings"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "DTAP phase for this deployment"
      }
    },
    "archiveDatabaseServer": {
      "type": "string",
      "metadata": {
        "description": "Server hosting lift-archive database"
      }
    },
    "archiveDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "Name of lift-archive database"
      }
    },
    "datamartDatabaseServer": {
      "type": "string",
      "metadata": {
        "description": "Server hosting lift-dw database"
      }
    },
    "datamartDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "Name of lift-dw database"
      }
    }
  },
  "variables": {
    "dataFactoryName": "[concat(parameters('environment'), '-LiftEtlFactory-', substring(uniqueString(resourceGroup().id),0,9))]",
    "keyvaultObjectName": "[concat('keyvault_', parameters('keyvaultName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.DataFactory/factories",
      "apiVersion": "2018-06-01",
      "name": "[variables('dataFactoryName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "resources": [
        {
          "type": "linkedservices",
          "apiVersion": "2018-06-01",
          "name": "[variables('keyvaultObjectName')]",
          "properties": {
            "type": "AzureKeyVault",
            "typeProperties": {
              "baseUrl": "[concat('https://', parameters('keyvaultName'), '.vault.azure.net/')]"
            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
          ]
        },
        {
          "type": "linkedservices",
          "apiVersion": "2018-06-01",
          "name": "SourceDatabase",
          "properties": {
            "type": "AzureSqlDatabase",
            "typeProperties": {
              "connectionString": {
                "type": "AzureKeyVaultSecret",
                "store": {
                  "referenceName": "[variables('keyvaultObjectName')]",
                  "type": "LinkedServiceReference"
                },
                "secretName": "[concat('connectionstring-', parameters('environment'), '-liftreplica-reader')]"
              }
            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
            "[resourceId('Microsoft.DataFactory/factories/linkedservices', variables('dataFactoryName'), variables('keyvaultObjectName'))]"
          ]
        },
        {
          "type": "linkedservices",
          "apiVersion": "2018-06-01",
          "name": "ArchiveDatabase",
          "properties": {
            "type": "AzureSqlDatabase",
            "typeProperties": {
              "connectionString": "[concat('Encrypt=True;Integrated Security=False;Data Source=', parameters('archiveDatabaseServer'), ';Initial Catalog=', parameters('archiveDatabaseName'), ';Connection Timeout=30')]"
            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
          ]
        },
        {
          "type": "linkedservices",
          "apiVersion": "2018-06-01",
          "name": "DatamartDatabase",
          "properties": {
            "type": "AzureSqlDatabase",
            "typeProperties": {
              "connectionString": "[concat('Encrypt=True;Integrated Security=False;Data Source=', parameters('datamartDatabaseServer'), ';Initial Catalog=', parameters('datamartDatabaseName'), ';Connection Timeout=30')]"
            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
          ]
        }
      ]
    }
  ],
  "outputs": {
    "dataFactoryName": {
      "type": "string",
      "value": "[variables('dataFactoryName')]"
    }
  }
}
